---
  # ------------------------------------------------------------ 
  # General Maintenance Tasks for Fresh Instance
  # ------------------------------------------------------------ 
  - name: Update APT Cache
    apt: update_cache=yes cache_valid_time=3600
    become: yes

  - name: Install LAP Packages (Apache2 and php-*)
    apt: 
      name: ['apache2', 'php', 'php-mysql', 'php-gd', 'php-ssh2']
      state: present
    become: yes

  - name: Install Ansible Playbook Dependencies
    apt:
      name: ['unzip']
      state: present
    become: yes

  # ------------------------------------------------------------ 
  # Download Latest WordPress Package and Extract to {{ www_dir }}
  # ------------------------------------------------------------ 
  - name: Download WordPress
    get_url: 
      url: https://wordpress.org/latest.tar.gz 
      dest: /tmp/wordpress.tar.gz
      validate_certs: no

  - name: Extract WordPress to {{ www_dir }}
    unarchive: 
      src: /tmp/wordpress.tar.gz 
      dest: "{{ www_dir }}" 
      copy: no
    become: yes

  - name: Update Apache 000-default.conf
    become: yes
    lineinfile: 
      dest: /etc/apache2/sites-enabled/000-default.conf 
      regexp: "(.)+DocumentRoot /var/www/html"
      line: "DocumentRoot {{ wp_dir }}"
    notify:
      - restart apache

  # ------------------------------------------------------------ 
  # Initialize wp-config.php and make appropriate changes
  # ------------------------------------------------------------ 

  - name: Copy Default Sample Config File
    command: "cp {{ wp_dir }}/wp-config-sample.php {{ wp_dir }}/wp-config.php" 
    args:
      creates: "{{ wp_dir }}/wp-config.php"
    become: yes

  - name: Clear Copied wp-config.php
    replace:
      path: "{{www_dir}}/wordpress/wp-config.php"
      regexp: ".*"

  - name: Add PHP Header to wp-config.php
    copy:
      content: "<?php"
      dest: "{{ wp_dir }}/wp-config.php"

  - name: Append DB Configuration to wp-config.php
    blockinfile:
      path: "{{ wp_dir }}/wp-config.php"
      marker: "# {mark} ANSIBLEMANAGED BLOCK: DB-Config"
      block: |
        define( 'DB_NAME', '{{ wp_db_name }}' );
        define( 'DB_USER', '{{ wp_db_user }}' );
        define( 'DB_PASSWORD', '{{ wp_db_password }}' );
        define( 'DB_HOST', '{{ wp_db_host }}' );
        define( 'DB_CHARSET', 'utf8' );
        define( 'DB_COLLATE', '' );
        $table_prefix = 'wp_';
      insertafter: "EOF"

  - name: Download WordPress Salt File
    get_url:
      url: https://api.wordpress.org/secret-key/1.1/salt
      dest: "{{www_dir}}/salt.txt"

  - name: Slurp Contents of Downloaded Salt File
    slurp:
      src: "{{www_dir}}/salt.txt"
    register: salts_content

  - name: Append WordPress Salt Configuration to wp-config.php
    blockinfile:
      path: "{{ wp_dir }}/wp-config.php"
      marker: "# {mark} ANSIBLEMANAGED BLOCK: SALT"
      block: "{{ salts_content['content'] | b64decode }}"
      insertafter: "EOF"

  - name: Add Required Footer to wp-config.php
    blockinfile:
      path: "{{ wp_dir }}/wp-config.php"
      marker: "# {mark} ANSIBLEMANAGED BLOCK: Footer"
      block: |
        define( 'WP_DEBUG', false );
        if ( ! defined( 'ABSPATH' ) ) {
          define( 'ABSPATH', dirname( __FILE__ ) . '/' );
        }
        require_once( ABSPATH . 'wp-settings.php' );
      insertafter: "EOF"

  # ------------------------------------------------------------ 
  # Download and Extract WordPress Plugins
  # ------------------------------------------------------------ 

  - name: Download WordPress Plugin(s)
    get_url:
      url: "https://downloads.wordpress.org/plugin/{{ item }}.zip"
      dest: "/tmp/{{ item }}.zip"
      force: no
    with_items:
      - wp-stateless
      - fakerpress

  - name: Extract Downloaded WordPress Plugin(s)
    unarchive:
      src: "/tmp/{{ item }}.zip"
      dest: "{{ wp_dir }}/wp-content/plugins"
      creates: "{{ wp_dir }}/wp-content/plugins/{{ item }}/"
      copy: false
    with_items:
      - wp-stateless
      - fakerpress
  
  # ------------------------------------------------------------ 
  # Set Owner of {{ www_dir }} to www-data
  # ------------------------------------------------------------ 
  
  - name: Change Permissions for {{ www_dir }}
    file:
      path: "{{ www_dir }}"
      state: directory
      recurse: yes
      owner: www-data
      group: www-data

